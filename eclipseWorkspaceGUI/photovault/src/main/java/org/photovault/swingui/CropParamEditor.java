/*
 * CropParamEditor.java
 *
 * Created on June 3, 2006, 2:53 PM
 */

package org.photovault.swingui;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.text.DecimalFormat;
import java.util.HashSet;
import java.util.Iterator;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.JComponent;
import javax.swing.JTextField;
import javax.swing.KeyStroke;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.text.Document;

/**
 *
 * @author  harri
 */
public class CropParamEditor extends javax.swing.JDialog 
        implements DocumentListener {
    
    /** Creates new form CropParamEditor */
    public CropParamEditor(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        coordFmt = new DecimalFormat( "0.0##" );
        rotFmt = new DecimalFormat( "##0.#" );
        initComponents();
        Document rotDoc = rotField.getDocument();
        rotDoc.putProperty( "FIELD", rotField );
        rotDoc.addDocumentListener( this );
        
        getRootPane().setDefaultButton( cropBtn );
        
        final CropParamEditor staticThis = this;
        Action cancelAction = new AbstractAction() {
            public void actionPerformed( ActionEvent e ) {
                staticThis.cancelBtlActionPerformed( e );
            }
        };
        getRootPane().getActionMap().put( "ESCAPE", cancelAction );
        KeyStroke escapeKeyStroke = KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0, false);
        getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(escapeKeyStroke, "ESCAPE");        
    }
   
    private HashSet listeners = new HashSet();
    
    /**
     Should editor inform listeners about changes to text field documents
     */
    private boolean eventsEnabled = true;
    
    private void disableEvents() {
        eventsEnabled = false;
    }
    
    private void enableEvents() {
        eventsEnabled = true;
    }
    
    public void addListener( CropParamEditorListener l ) {
        listeners.add( l );
    }

    public void removeListener( CropParamEditorListener l ) {
        listeners.remove( l );
    }

    private void fireCancelBtnEvent() {
        Iterator iter = listeners.iterator();
        while ( iter.hasNext() ) {
            CropParamEditorListener l = (CropParamEditorListener) iter.next();
            l.cancelCrop();
        }
    }
    

    private void fireCropBtnEvent() {
        Iterator iter = listeners.iterator();
        while ( iter.hasNext() ) {
            CropParamEditorListener l = (CropParamEditorListener) iter.next();
            l.applyCrop();
        }
    }
    

    private void fireParamsChangedEvent() {
        Iterator iter = listeners.iterator();
        while ( iter.hasNext() ) {
            CropParamEditorListener l = (CropParamEditorListener) iter.next();
            l.cropParamsChanged();
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        cropBtn = new javax.swing.JButton();
        cancelBtl = new javax.swing.JButton();
        xminField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        xmaxField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        yminField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        ymaxField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        rotField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Crop parameters");
        setAlwaysOnTop(true);
        setName("Crop parameters");
        cropBtn.setText("Crop");
        cropBtn.setMinimumSize(null);
        cropBtn.setName("okBtn");
        cropBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cropBtnActionPerformed(evt);
            }
        });

        cancelBtl.setText("Cancel");
        cancelBtl.setDefaultCapable(false);
        cancelBtl.setName("cancelBtn");
        cancelBtl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtlActionPerformed(evt);
            }
        });

        xminField.setEditable(false);
        xminField.setName("xminField");

        jLabel1.setText("xmin");

        jLabel2.setText("xmax");
        jLabel2.setName("ymaxField");

        xmaxField.setEditable(false);
        xmaxField.setName("xmaxField");

        jLabel3.setText("ymin");

        yminField.setEditable(false);
        yminField.setName("yminField");

        jLabel4.setText("ymax");

        ymaxField.setEditable(false);

        jLabel5.setText("Rotation");

        rotField.setName("rotField");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .add(cropBtn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 64, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(cancelBtl)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED))
                    .add(layout.createSequentialGroup()
                        .add(37, 37, 37)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jLabel5)
                            .add(jLabel4)
                            .add(layout.createSequentialGroup()
                                .add(jLabel1)
                                .add(12, 12, 12)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(xminField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 46, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jLabel3))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                    .add(ymaxField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                                    .add(jLabel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                                    .add(rotField))
                                .add(49, 49, 49))
                            .add(layout.createSequentialGroup()
                                .add(yminField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 47, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                                .add(xmaxField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 50, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)))))
                .add(12, 12, 12))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel3)
                            .add(yminField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(layout.createSequentialGroup()
                        .add(31, 31, 31)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(xmaxField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(xminField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel1))))
                .add(14, 14, 14)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel2)
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(ymaxField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel4))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel5)
                            .add(rotField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(16, 16, 16)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(cancelBtl)
                            .add(cropBtn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .add(22, 22, 22))
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelBtlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtlActionPerformed
        fireCancelBtnEvent();
    }//GEN-LAST:event_cancelBtlActionPerformed

    private void cropBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cropBtnActionPerformed
        fireCropBtnEvent();
    }//GEN-LAST:event_cropBtnActionPerformed
    
    private DecimalFormat coordFmt;
    private DecimalFormat rotFmt;
    
    double xmin;
    double xmax;
    double ymin;
    double ymax;
    double rot;
    
    public void setXmin( double xmin ) {
        disableEvents();
        String str = coordFmt.format( xmin );
        xminField.setText( str );
        this.xmin = xmin;
        enableEvents();
    }
    
    public double getXmin() {
        return xmin;
    }
    
    public void setXmax( double xmax ) {
        disableEvents();
        String str = coordFmt.format( xmax );
        xmaxField.setText( str );
        this.xmax = xmax;
        enableEvents();
    }
    
    public double getXmax() {
        return xmax;
    }

    public void setYmin( double ymin ) {
        disableEvents();
        String str = coordFmt.format( ymin );
        yminField.setText( str );
        this.ymin = ymin;
        enableEvents();
    }

    public double getYmin() {
        return ymin;
    }
    
    public void setYmax( double ymax ) {
        disableEvents();
        String str = coordFmt.format( ymax );
        ymaxField.setText( str );
        this.ymax = ymax;
        enableEvents();
    }
    
    public double getYmax() {
        return ymax;
    }

    public void setRot( double rot ) {
        disableEvents();
        String str = rotFmt.format( rot );
        rotField.setText( str );
        this.rot = rot;
        enableEvents();
    }

    public double getRot() {
        return rot;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CropParamEditor(new javax.swing.JFrame(), true).setVisible(true);
            }
        });
    }

    public void insertUpdate(DocumentEvent documentEvent) {
        Document doc = documentEvent.getDocument();
        JTextField fld = (JTextField) doc.getProperty( "FIELD" );
        fieldChanged( fld );
    }

    public void removeUpdate(DocumentEvent documentEvent) {
    }

    public void changedUpdate(DocumentEvent documentEvent) {
    }
    
    private void fieldChanged( JTextField fld ) {
        if ( !eventsEnabled ) {
            return;
        }
        
        try {    
            String str = fld.getText();
            double newValue = Double.parseDouble( fld.getText() );
            if ( fld == rotField ) {
                rot = newValue;
            }   
            fireParamsChangedEvent();
        } catch (NumberFormatException ex) {
            // Not a correct number, don't update any values'
        }
    }
            
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelBtl;
    private javax.swing.JButton cropBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField rotField;
    private javax.swing.JTextField xmaxField;
    private javax.swing.JTextField xminField;
    private javax.swing.JTextField ymaxField;
    private javax.swing.JTextField yminField;
    // End of variables declaration//GEN-END:variables
    
}
