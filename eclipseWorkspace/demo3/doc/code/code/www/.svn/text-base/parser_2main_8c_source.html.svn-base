<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>Functional Mockup Interface For EnergyPlus: main.c Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript">
$(document).ready(initResizable);
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!-- Generated by Doxygen 1.7.3 -->
<div id="top">
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">Functional Mockup Interface For EnergyPlus</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
      <li><a href="dirs.html"><span>Directories</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
  initNavTree('parser_2main_8c.html','');
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<h1>parser/main.c</h1>  </div>
</div>
<div class="contents">
<a href="parser_2main_8c.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 
<a name="l00002"></a>00002 
<a name="l00003"></a>00003 
<a name="l00004"></a>00004 
<a name="l00005"></a>00005 
<a name="l00006"></a>00006 
<a name="l00007"></a>00007 
<a name="l00008"></a>00008 
<a name="l00009"></a>00009 
<a name="l00010"></a>00010 
<a name="l00011"></a>00011 
<a name="l00012"></a>00012 
<a name="l00013"></a>00013 
<a name="l00014"></a>00014 
<a name="l00015"></a>00015 
<a name="l00016"></a>00016 
<a name="l00017"></a>00017 
<a name="l00018"></a>00018 
<a name="l00019"></a>00019 
<a name="l00020"></a>00020 <span class="preprocessor">#include &quot;<a class="code" href="parser_2main_8h.html">main.h</a>&quot;</span>
<a name="l00021"></a>00021 <span class="preprocessor">#include &quot;string.h&quot;</span>
<a name="l00022"></a>00022 <span class="preprocessor">#include &quot;<a class="code" href="util_8h.html" title="utility functions">../common/util.h</a>&quot;</span>
<a name="l00023"></a>00023 <span class="preprocessor">#include &lt;sys/stat.h&gt;</span>
<a name="l00024"></a>00024 
<a name="l00025"></a><a class="code" href="parser_2main_8c.html#a3ec6ac973634273e8ffff5a4b6de6c92">00025</a> <span class="preprocessor">#define XML_FILE  &quot;modelDescription.xml&quot;</span>
<a name="l00026"></a>00026 <span class="preprocessor"></span>
<a name="l00027"></a><a class="code" href="parser_2main_8c.html#abfcc22c10d8a6f031bf0aa64a5f6a22f">00027</a> <a class="code" href="structFMU.html">FMU</a> <a class="code" href="parser_2main_8c.html#abfcc22c10d8a6f031bf0aa64a5f6a22f">fmu</a>;        <span class="comment">// Zuo: FMU to parse</span>
<a name="l00028"></a>00028 
<a name="l00036"></a><a class="code" href="parser_2main_8h.html#a15f1555acf9c47ae3e6ac78489755c69">00036</a> <span class="keywordtype">int</span> <a class="code" href="parser_2main_8c.html#a15f1555acf9c47ae3e6ac78489755c69" title="Call the parser and save the information in fmu.modelDescription.">callparser</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* fmuFilNam, <span class="keyword">const</span> <span class="keywordtype">char</span>* tmpPat){
<a name="l00037"></a>00037 
<a name="l00038"></a>00038   <span class="keywordtype">char</span>* xmlPat;
<a name="l00039"></a>00039 
<a name="l00040"></a>00040   <span class="comment">// Get the model description</span>
<a name="l00041"></a>00041   xmlPat = calloc(<span class="keyword">sizeof</span>(<span class="keywordtype">char</span>), strlen(fmuFilNam) + strlen(<a class="code" href="parser_2main_8c.html#a3ec6ac973634273e8ffff5a4b6de6c92">XML_FILE</a>) + 1 + 10);
<a name="l00042"></a>00042     sprintf(xmlPat, <span class="stringliteral">&quot;%s%s%s&quot;</span>, tmpPat, <a class="code" href="parser_2main_8h.html#a837df2c29aacf37cb96c2b65acb312a6" title="FMU file name.">PATH_SEP</a>, <a class="code" href="parser_2main_8c.html#a3ec6ac973634273e8ffff5a4b6de6c92">XML_FILE</a>);
<a name="l00043"></a>00043   fmu.<a class="code" href="structFMU.html#af33bbe718a59945560e804db3ce2b32b">modelDescription</a> = <a class="code" href="xml__parser__cosim_8c.html#a9a5414d298c36bfedc74bbbd99f9809d" title="Parse the fmu.">parse</a>(xmlPat);
<a name="l00044"></a>00044 
<a name="l00045"></a>00045   <span class="keywordflow">if</span> (!fmu.<a class="code" href="structFMU.html#af33bbe718a59945560e804db3ce2b32b">modelDescription</a>){
<a name="l00046"></a>00046     <a class="code" href="util_8c.html#a8fce13928a0330cbd29ca38d3301709b" title="Print formatted error message.">printfError</a>(<span class="stringliteral">&quot;Failed to parse xml file %s.\n&quot;</span>, xmlPat);
<a name="l00047"></a>00047     free(xmlPat);
<a name="l00048"></a>00048     <span class="keywordflow">return</span> -1;
<a name="l00049"></a>00049   }
<a name="l00050"></a>00050   free(xmlPat);
<a name="l00051"></a>00051   <a class="code" href="util_8c.html#a4700e62a1aa5ee5174ebf6e6aaa1bf4d" title="Print formatted debug message.">printfDebug</a>(<span class="stringliteral">&quot;Model description is %s.&quot;</span>, <a class="code" href="xml__parser__cosim_8c.html#aef3634637021d01f8ea8d5765455a01b">getModelIdentifier</a>(fmu.<a class="code" href="structFMU.html#af33bbe718a59945560e804db3ce2b32b">modelDescription</a>));
<a name="l00052"></a>00052 
<a name="l00053"></a>00053   <span class="comment">// Clean up memory</span>
<a name="l00054"></a>00054   <span class="keywordflow">return</span> 0;
<a name="l00055"></a>00055 }
<a name="l00056"></a>00056 
<a name="l00063"></a><a class="code" href="parser_2main_8h.html#a33e97499425462fa109066bd011422ab">00063</a> <span class="keywordtype">int</span> <span class="keyword">delete</span>(<span class="keywordtype">char</span>* tmpPat){
<a name="l00064"></a>00064     <span class="keywordtype">int</span> <a class="code" href="expat_8h.html#aec5db107b91447a96c47961ce9df2660">version</a> = 0;
<a name="l00065"></a>00065     <span class="keywordtype">char</span>* cmd;
<a name="l00066"></a>00066     <span class="keywordtype">char</span>* filenames;
<a name="l00067"></a>00067   <span class="keyword">struct </span>stat st;
<a name="l00068"></a>00068 
<a name="l00069"></a>00069   <span class="comment">// Ceck if the folder present</span>
<a name="l00070"></a>00070   <span class="keywordflow">if</span>(stat(tmpPat,&amp;st) != 0){
<a name="l00071"></a>00071     <a class="code" href="util_8c.html#a8fce13928a0330cbd29ca38d3301709b" title="Print formatted error message.">printfError</a>(<span class="stringliteral">&quot;%s is not existing.\n&quot;</span>, tmpPat);
<a name="l00072"></a>00072     <span class="keywordflow">return</span> 1;
<a name="l00073"></a>00073   }    
<a name="l00074"></a>00074 
<a name="l00075"></a>00075     cmd = calloc(<span class="keyword">sizeof</span>(<span class="keywordtype">char</span>), strlen(tmpPat) +18);
<a name="l00076"></a>00076     <span class="keywordflow">if</span> (cmd == NULL){
<a name="l00077"></a>00077         <a class="code" href="util_8c.html#a8fce13928a0330cbd29ca38d3301709b" title="Print formatted error message.">printfError</a>(<span class="stringliteral">&quot;Failed to allocate memory for cmd.\n&quot;</span>, tmpPat);
<a name="l00078"></a>00078         <span class="keywordflow">return</span> -1;
<a name="l00079"></a>00079       }
<a name="l00080"></a>00080   
<a name="l00081"></a>00081   <span class="keywordflow">if</span> (<a class="code" href="demo_2main_8h.html#a987b73d7cc6da72732af75c5d7872d29">WINDOWS</a>)
<a name="l00082"></a>00082     sprintf(cmd, <span class="stringliteral">&quot;rd %s /S/Q&quot;</span>, tmpPat); <span class="comment">// Command in windows</span>
<a name="l00083"></a>00083   <span class="keywordflow">else</span>
<a name="l00084"></a>00084     sprintf(cmd, <span class="stringliteral">&quot;rm -r %s&quot;</span>, tmpPat); <span class="comment">// Command in Linux</span>
<a name="l00085"></a>00085 
<a name="l00086"></a>00086 
<a name="l00087"></a>00087     <a class="code" href="util_8c.html#a4700e62a1aa5ee5174ebf6e6aaa1bf4d" title="Print formatted debug message.">printfDebug</a>(<span class="stringliteral">&quot;Generated cmd: %s\n&quot;</span>, cmd);
<a name="l00088"></a>00088     <span class="keywordflow">if</span> ( system(cmd) != 0 ){    
<a name="l00089"></a>00089     <span class="comment">//if(rmdir(tmpPat) != 0)</span>
<a name="l00090"></a>00090       <a class="code" href="util_8c.html#aaeb10900fa2f58687ae884a9a5229f4c" title="Print error message.">printError</a>(<span class="stringliteral">&quot;Failed to delete the temporary files&quot;</span>);
<a name="l00091"></a>00091       <span class="keywordflow">return</span> -1;
<a name="l00092"></a>00092     }
<a name="l00093"></a>00093     <a class="code" href="util_8c.html#a97697166f12dcd5e6fb5651ed7f1031a" title="Print debug message.">printDebug</a>(<span class="stringliteral">&quot;Deleted temporary files&quot;</span>);
<a name="l00094"></a>00094     <span class="keywordflow">return</span> 0;
<a name="l00095"></a>00095 }
<a name="l00096"></a>00096 
<a name="l00100"></a><a class="code" href="parser_2main_8h.html#a97ee70a8770dc30d06c744b24eb2fcfc">00100</a> <span class="keywordtype">void</span> <a class="code" href="parser_2main_8c.html#a97ee70a8770dc30d06c744b24eb2fcfc" title="Print help information.">help</a>(){
<a name="l00101"></a>00101 
<a name="l00102"></a>00102   printf(<span class="stringliteral">&quot;NAME\n&quot;</span>);
<a name="l00103"></a>00103   printf(<span class="stringliteral">&quot;\tparser - parse xml file\n\n&quot;</span>);
<a name="l00104"></a>00104   printf(<span class="stringliteral">&quot;SYNOPSIS\n&quot;</span>);
<a name="l00105"></a>00105   printf(<span class="stringliteral">&quot;\tparser OPTION...FMUFILE...[-name objNam]\n\n&quot;</span>);
<a name="l00106"></a>00106   printf(<span class="stringliteral">&quot;DESCRIPION\n&quot;</span>);
<a name="l00107"></a>00107   printf(<span class="stringliteral">&quot;The parser parses informaiton in modelDescription.xml file in functional mockup unit for co-simulation.\n\n&quot;</span>);
<a name="l00108"></a>00108   printf(<span class="stringliteral">&quot;OPTION\n&quot;</span>);
<a name="l00109"></a>00109   printf(<span class="stringliteral">&quot;\t-d, --delete\n&quot;</span>);
<a name="l00110"></a>00110   printf(<span class="stringliteral">&quot;\t\tdelete the unpacked fmu folder\n&quot;</span>);
<a name="l00111"></a>00111   printf(<span class="stringliteral">&quot;\t-h, --help\n&quot;</span>);
<a name="l00112"></a>00112   printf(<span class="stringliteral">&quot;\t\tprint help information\n&quot;</span>);
<a name="l00113"></a>00113   printf(<span class="stringliteral">&quot;\t-p, --printidf\n&quot;</span>);
<a name="l00114"></a>00114   printf(<span class="stringliteral">&quot;\t\tprint temporary IDF file for Energyplus\n&quot;</span>);
<a name="l00115"></a>00115   printf(<span class="stringliteral">&quot;\t-u, --unpack\n&quot;</span>);
<a name="l00116"></a>00116   printf(<span class="stringliteral">&quot;\t\tunpack the FMU\n&quot;</span>);
<a name="l00117"></a>00117   printf(<span class="stringliteral">&quot;\t-v, --verbose\n&quot;</span>);
<a name="l00118"></a>00118   printf(<span class="stringliteral">&quot;\t\tprint debug information\n&quot;</span>);
<a name="l00119"></a>00119   printf(<span class="stringliteral">&quot;OTHERS\n&quot;</span>);
<a name="l00120"></a>00120   printf(<span class="stringliteral">&quot;\t-name\n&quot;</span>);
<a name="l00121"></a>00121   printf(<span class="stringliteral">&quot;\t\textract the fmu in folder objNam. The default folder name is fmu&#39;s name wihtout the \&quot;.fmu\&quot;.\n\n&quot;</span>);
<a name="l00122"></a>00122   printf(<span class="stringliteral">&quot;AUTHOR\n&quot;</span>);
<a name="l00123"></a>00123   printf(<span class="stringliteral">&quot;\t Wangda Zuo, Michael Wetter @ Lawrence Berkeley National Labortory\n&quot;</span>);
<a name="l00124"></a>00124 }
<a name="l00125"></a>00125 
<a name="l00126"></a>00126 
<a name="l00134"></a><a class="code" href="parser_2main_8c.html#ac0f2228420376f4db7e1274f2b41667c">00134</a> <span class="keywordtype">int</span> <a class="code" href="demo_2main_8c.html#a0ddf1224851353fc92bfbff6f499fa97">main</a>(<span class="keywordtype">int</span> argc, <span class="keyword">const</span> <span class="keywordtype">char</span>* argv[]){
<a name="l00135"></a>00135   <span class="keywordtype">int</span> <a class="code" href="fmuTemplate_8h.html#ad51f78a2c68c740b5b1d4fa9bda8500f">i</a>;
<a name="l00136"></a>00136   <span class="keyword">const</span> <span class="keywordtype">char</span> *fmuFilNam;
<a name="l00137"></a>00137   <span class="keywordtype">char</span> *tmpPat;
<a name="l00138"></a>00138   <span class="keyword">const</span> <span class="keywordtype">char</span> *objNam;
<a name="l00139"></a>00139   <a class="code" href="parser_2main_8h.html#a3cfe71f40b244562d3665516c3934c06">option</a> opt;
<a name="l00140"></a>00140   <span class="keywordtype">int</span> length, nam = 0;
<a name="l00141"></a>00141 
<a name="l00142"></a>00142   fmuFilNam = NULL;
<a name="l00143"></a>00143 
<a name="l00144"></a>00144   <span class="comment">// Read command line arguments</span>
<a name="l00145"></a>00145   <span class="keywordflow">for</span>(i=1; i &lt; argc; i++){
<a name="l00146"></a>00146     <span class="keywordflow">if</span> (strcmp(argv[i], <span class="stringliteral">&quot;--delete&quot;</span>) == 0 || strcmp(argv[i], <span class="stringliteral">&quot;-d&quot;</span>) == 0)         
<a name="l00147"></a>00147       opt = <a class="code" href="parser_2main_8h.html#a3cfe71f40b244562d3665516c3934c06a9f24986f75e339a5688715dd04e2bdaf">opt_delete</a>;
<a name="l00148"></a>00148     <span class="keywordflow">else</span> <span class="keywordflow">if</span> (strcmp(argv[i], <span class="stringliteral">&quot;--printidf&quot;</span>) == 0 || strcmp(argv[i], <span class="stringliteral">&quot;-p&quot;</span>) == 0)  
<a name="l00149"></a>00149       opt = <a class="code" href="parser_2main_8h.html#a3cfe71f40b244562d3665516c3934c06a15c89cb3f95eb4b6633753bfaa4fa1e0">opt_printidf</a>;
<a name="l00150"></a>00150     <span class="keywordflow">else</span> <span class="keywordflow">if</span> (strcmp(argv[i], <span class="stringliteral">&quot;--unpack&quot;</span>) == 0 || strcmp(argv[i], <span class="stringliteral">&quot;-u&quot;</span>) == 0)    
<a name="l00151"></a>00151       opt = <a class="code" href="parser_2main_8h.html#a3cfe71f40b244562d3665516c3934c06ae54b6a89e07c7247bf6ef4540f8174d0">opt_unpack</a>;
<a name="l00152"></a>00152     <span class="keywordflow">else</span> <span class="keywordflow">if</span> (strcmp(argv[i], <span class="stringliteral">&quot;--help&quot;</span>) == 0 || strcmp(argv[i], <span class="stringliteral">&quot;-h&quot;</span>) == 0)      
<a name="l00153"></a>00153       opt = <a class="code" href="parser_2main_8h.html#a3cfe71f40b244562d3665516c3934c06aa626bcf2d4c9c09f11afee37cd267465">opt_help</a>;
<a name="l00154"></a>00154     <span class="keywordflow">else</span> <span class="keywordflow">if</span> (strcmp(argv[i], <span class="stringliteral">&quot;--verbose&quot;</span>) == 0 || strcmp(argv[i], <span class="stringliteral">&quot;-v&quot;</span>) == 0)   
<a name="l00155"></a>00155       <a class="code" href="util_8c.html#a8166bd9e747d2c219cf287b511235906" title="Set the mode in debug so that the debug information will be printed.">setDebug</a>();
<a name="l00156"></a>00156     <span class="keywordflow">else</span> <span class="keywordflow">if</span> (strcmp(argv[i], <span class="stringliteral">&quot;-name&quot;</span>) == 0)
<a name="l00157"></a>00157     {  i++; nam = 1; objNam = argv[<a class="code" href="fmuTemplate_8h.html#ad51f78a2c68c740b5b1d4fa9bda8500f">i</a>];}
<a name="l00158"></a>00158     <span class="keywordflow">else</span>
<a name="l00159"></a>00159       fmuFilNam = argv[<a class="code" href="fmuTemplate_8h.html#ad51f78a2c68c740b5b1d4fa9bda8500f">i</a>];
<a name="l00160"></a>00160   }
<a name="l00161"></a>00161 
<a name="l00162"></a>00162   <span class="keywordflow">if</span>(argc&lt;2 || (argc&lt;3 &amp;&amp; opt!= <a class="code" href="parser_2main_8h.html#a3cfe71f40b244562d3665516c3934c06aa626bcf2d4c9c09f11afee37cd267465">opt_help</a>)){
<a name="l00163"></a>00163      <a class="code" href="util_8c.html#aaeb10900fa2f58687ae884a9a5229f4c" title="Print error message.">printError</a>(<span class="stringliteral">&quot;Missing argument or option:cparser.exe option argument \n&quot;</span>);
<a name="l00164"></a>00164      <span class="keywordflow">return</span> -1;
<a name="l00165"></a>00165   }
<a name="l00166"></a>00166 
<a name="l00167"></a>00167   <span class="keywordflow">if</span>(fmuFilNam == NULL) 
<a name="l00168"></a>00168     printf(<span class="stringliteral">&quot;Warning: No FMU file name is given.\n&quot;</span>);
<a name="l00169"></a>00169   <span class="keywordflow">else</span>
<a name="l00170"></a>00170     <a class="code" href="util_8c.html#a4700e62a1aa5ee5174ebf6e6aaa1bf4d" title="Print formatted debug message.">printfDebug</a>(<span class="stringliteral">&quot;FMU file name is \&quot;%s\&quot;.\n&quot;</span>, fmuFilNam);
<a name="l00171"></a>00171 
<a name="l00172"></a>00172   <span class="comment">// Check command line arguments</span>
<a name="l00173"></a>00173   <span class="keywordflow">switch</span> (opt){
<a name="l00174"></a>00174       <span class="keywordflow">case</span> <a class="code" href="parser_2main_8h.html#a3cfe71f40b244562d3665516c3934c06a15c89cb3f95eb4b6633753bfaa4fa1e0">opt_printidf</a>:
<a name="l00175"></a>00175     <span class="keywordflow">case</span> <a class="code" href="parser_2main_8h.html#a3cfe71f40b244562d3665516c3934c06ae54b6a89e07c7247bf6ef4540f8174d0">opt_unpack</a>:        
<a name="l00176"></a>00176       <span class="keywordflow">case</span> <a class="code" href="parser_2main_8h.html#a3cfe71f40b244562d3665516c3934c06a9f24986f75e339a5688715dd04e2bdaf">opt_delete</a>:  
<a name="l00177"></a>00177       <span class="keywordflow">if</span>(nam == 0)
<a name="l00178"></a>00178           length = strlen(fmuFilNam)-4;             
<a name="l00179"></a>00179       <span class="keywordflow">else</span> 
<a name="l00180"></a>00180         length = strlen(objNam);
<a name="l00181"></a>00181           <span class="keywordflow">break</span>;
<a name="l00182"></a>00182     <span class="keywordflow">case</span> <a class="code" href="parser_2main_8h.html#a3cfe71f40b244562d3665516c3934c06aa626bcf2d4c9c09f11afee37cd267465">opt_help</a>:
<a name="l00183"></a>00183       <a class="code" href="parser_2main_8c.html#a97ee70a8770dc30d06c744b24eb2fcfc" title="Print help information.">help</a>();
<a name="l00184"></a>00184       <span class="keywordflow">return</span> 0;
<a name="l00185"></a>00185       <span class="keywordflow">default</span>:
<a name="l00186"></a>00186           <a class="code" href="util_8c.html#aaeb10900fa2f58687ae884a9a5229f4c" title="Print error message.">printError</a>(<span class="stringliteral">&quot;Missing options: --delete | --printidf | --unpack | --verbose\n&quot;</span>);
<a name="l00187"></a>00187           <span class="keywordflow">return</span> -1;
<a name="l00188"></a>00188   } 
<a name="l00189"></a>00189  
<a name="l00190"></a>00190   tmpPat = calloc(<span class="keyword">sizeof</span>(<span class="keywordtype">char</span>), length+1);
<a name="l00191"></a>00191   
<a name="l00192"></a>00192   <span class="comment">// Define the temporary folder</span>
<a name="l00193"></a>00193   <span class="keywordflow">if</span>(nam == 0){
<a name="l00194"></a>00194     <span class="keywordflow">if</span>(strncpy(tmpPat, fmuFilNam, length) == NULL){
<a name="l00195"></a>00195       <a class="code" href="util_8c.html#aaeb10900fa2f58687ae884a9a5229f4c" title="Print error message.">printError</a>(<span class="stringliteral">&quot;Failed to allocate memory for temp dir.\n&quot;</span>);
<a name="l00196"></a>00196         <span class="keywordflow">return</span> -1;
<a name="l00197"></a>00197     }
<a name="l00198"></a>00198   }
<a name="l00199"></a>00199   <span class="keywordflow">else</span>{
<a name="l00200"></a>00200     <span class="keywordflow">if</span>(strcpy(tmpPat, objNam) == NULL){
<a name="l00201"></a>00201         <a class="code" href="util_8c.html#aaeb10900fa2f58687ae884a9a5229f4c" title="Print error message.">printError</a>(<span class="stringliteral">&quot;Failed to allocate memory for temp dir.\n&quot;</span>);
<a name="l00202"></a>00202         <span class="keywordflow">return</span> -1;
<a name="l00203"></a>00203     }
<a name="l00204"></a>00204   }
<a name="l00205"></a>00205 
<a name="l00206"></a>00206   <a class="code" href="util_8c.html#a4700e62a1aa5ee5174ebf6e6aaa1bf4d" title="Print formatted debug message.">printfDebug</a>(<span class="stringliteral">&quot;Received tmpPat %s.\n&quot;</span>, tmpPat);
<a name="l00207"></a>00207 
<a name="l00208"></a>00208   <span class="comment">// Act according to the option</span>
<a name="l00209"></a>00209   <span class="keywordflow">switch</span> (opt)
<a name="l00210"></a>00210   {
<a name="l00211"></a>00211       <span class="keywordflow">case</span> <a class="code" href="parser_2main_8h.html#a3cfe71f40b244562d3665516c3934c06a9f24986f75e339a5688715dd04e2bdaf">opt_delete</a>:      
<a name="l00212"></a>00212         <span class="keywordflow">if</span>(<span class="keyword">delete</span>(tmpPat)!= 0){
<a name="l00213"></a>00213             <a class="code" href="util_8c.html#a8fce13928a0330cbd29ca38d3301709b" title="Print formatted error message.">printfError</a>(<span class="stringliteral">&quot;Failed to delete %s.\n&quot;</span>, tmpPat);
<a name="l00214"></a>00214         <span class="keywordflow">return</span> -1;
<a name="l00215"></a>00215         }
<a name="l00216"></a>00216         <span class="keywordflow">else</span>
<a name="l00217"></a>00217             <a class="code" href="util_8c.html#a4700e62a1aa5ee5174ebf6e6aaa1bf4d" title="Print formatted debug message.">printfDebug</a>(<span class="stringliteral">&quot;Successfully deleted the temporary folder %s.\n&quot;</span>, tmpPat);      
<a name="l00218"></a>00218         <span class="keywordflow">break</span>;
<a name="l00219"></a>00219       <span class="keywordflow">case</span> <a class="code" href="parser_2main_8h.html#a3cfe71f40b244562d3665516c3934c06ae54b6a89e07c7247bf6ef4540f8174d0">opt_unpack</a>:
<a name="l00220"></a>00220       <span class="keywordflow">case</span> <a class="code" href="parser_2main_8h.html#a3cfe71f40b244562d3665516c3934c06a15c89cb3f95eb4b6633753bfaa4fa1e0">opt_printidf</a>:
<a name="l00221"></a>00221       <span class="comment">// Unpack: Common part for unpack and printidf</span>
<a name="l00222"></a>00222         <span class="keywordflow">if</span>(<a class="code" href="util_8c.html#a9156399ba0e375385a46ab4248e966f5" title="Unpack the fmu using 7z.">unpack</a>(fmuFilNam, tmpPat)!= 0){        
<a name="l00223"></a>00223             <a class="code" href="util_8c.html#a8fce13928a0330cbd29ca38d3301709b" title="Print formatted error message.">printfError</a>(<span class="stringliteral">&quot;Failed to unpack %s.&quot;</span>, fmuFilNam);
<a name="l00224"></a>00224         <span class="keywordflow">return</span> -1;
<a name="l00225"></a>00225         }
<a name="l00226"></a>00226         <span class="keywordflow">else</span>
<a name="l00227"></a>00227             <a class="code" href="util_8c.html#a97697166f12dcd5e6fb5651ed7f1031a" title="Print debug message.">printDebug</a>(<span class="stringliteral">&quot;Successfully unpacked the fmu.\n&quot;</span>);
<a name="l00228"></a>00228 
<a name="l00229"></a>00229       <span class="comment">// Parser: Additional part for printidf</span>
<a name="l00230"></a>00230         <span class="keywordflow">if</span> (opt == <a class="code" href="parser_2main_8h.html#a3cfe71f40b244562d3665516c3934c06a15c89cb3f95eb4b6633753bfaa4fa1e0">opt_printidf</a>) {    
<a name="l00231"></a>00231         <span class="keywordflow">if</span> ( <a class="code" href="parser_2main_8c.html#a15f1555acf9c47ae3e6ac78489755c69" title="Call the parser and save the information in fmu.modelDescription.">callparser</a>(fmuFilNam, tmpPat) != 0 ){
<a name="l00232"></a>00232             <a class="code" href="util_8c.html#a8fce13928a0330cbd29ca38d3301709b" title="Print formatted error message.">printfError</a>(<span class="stringliteral">&quot;Failed to print the idf file from %s.&quot;</span>, fmuFilNam);
<a name="l00233"></a>00233           <span class="keywordflow">return</span> -1;
<a name="l00234"></a>00234         }
<a name="l00235"></a>00235         <span class="keywordflow">else</span> <a class="code" href="util_8c.html#a97697166f12dcd5e6fb5651ed7f1031a" title="Print debug message.">printDebug</a>(<span class="stringliteral">&quot;Successfully printed the idf file.\n&quot;</span>);
<a name="l00236"></a>00236       }  
<a name="l00237"></a>00237     <span class="keywordflow">break</span>;    
<a name="l00238"></a>00238   }
<a name="l00239"></a>00239 
<a name="l00240"></a>00240   <span class="keywordflow">return</span> 0;
<a name="l00241"></a>00241 }
</pre></div></div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="parser_2main_8c.html">main.c</a>      </li>
      <li class="footer">Generated on Tue Oct 11 2011 11:20:02 for Functional Mockup Interface For EnergyPlus by&#160;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.3 </li>
    </ul>
  </div>

</body>
</html>
